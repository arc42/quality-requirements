/***
 * arc42 - quality requirements examples - gradle build script
 =============================================================
 *
 * This is free software without any guarantees. Use at your own risk.
 *
 * See licence.txt for details.
 *
 *
 * Credits:
 *   Peter Niederwieser, for instructions on how to:
 *   - call shell commands from gradle:
 *     http://forums.gradle.org/gradle/topics/how_to_execute_shell_command_source_or_dot_doestnt_work_with_exec
***************************************************************/


buildscript {
    repositories {
      jcenter()

    }

	dependencies {
		// upgrade to latest jruby version due to a bugfix needed for Windows 10.
		// can be removed, when asciidoctorj uses this as a default version.
		classpath('org.jruby:jruby-complete:9.1.13.0')

		// classpath('org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.16')
		classpath('org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16')
		classpath('org.asciidoctor:asciidoctorj-diagram:1.5.4.1')
	}
}

plugins {
	id 'org.asciidoctor.convert' version '1.5.3'
}

apply plugin: 'org.asciidoctor.convert'


project.description = "arc42 - Examples for Software Quality Requirements"
project.version = "0.8.1"

ext {
    srcDir  = "$projectDir/src/asciidoc"
    targetDir = "$buildDir"
}


asciidoctorj {
    version = '1.5.6'
}

asciidoctor {
  outputDir = file( targetDir )
  sourceDir = file("$srcDir")
  println "outputDir = " + outputDir
  println "sourceDir = " + sourceDir

  // enable the Asciidoctor Diagram extension
	requires 'asciidoctor-diagram'

  separateOutputDirs = false

  sources  { include "index.adoc" }

  backends 'html5' , 'pdf' , 'docbook' //, 'epub3'

  attributes = [
				'release-branch': 'master',
        'outputFile': "$outputDir/quality-requirements.pdf",
				'source-highlighter': 'coderay',
				'tabsize': '4',
				'toc': 'left',
				'icons': 'font',
        'sectlink': true,
				'sectanchors': true,
				'idprefix': '',
				'idseparator': '-',
        'doctype': 'book',
        'toclevels': 3,
        'imagesdir': './images',
        'homepage': 'http://github.com/arc42/quality-requirements',
        'icons': 'font',
        'numbered': true,
        'version': project.version
]
  resources {
          // include architecture diagrams
          from("${projectDir}/src/asciidoc") {
            include 'images/**'
          }
      }

} // asciidoctor



task generateDocx( dependsOn: 'asciidoctor', type: Exec) {
      description =
"""
Executing shell commands does currently NOT work from within
the IntelliJ JetGradle environment.
"""
    executable "sh"

// calling pandoc over sh directly from gradle does not produce any output,
// therefore I delegated docx creation to a shell script.

    args "create_docx_with_pandoc.sh"

}


defaultTasks 'generateDocx'
